name: Run Tests

run-name: Running Tests



on: [push]

jobs:
  trail-ubuntu-run:
    runs-on: ubuntu-latest
    steps:
    #clone the github to the runner system
      - uses: actions/checkout@v4

      - name: check file
        run: |
          cd Source 
          ls -a

      # Read the solution file and make sure it has the correct unreal engine version
      - name: Check Unreal Engine target version in solution file
        run: |
          FILE_PATH="TimeParadox.uproject"
          
          if grep -q '"EngineAssociation": "5.4"' "$FILE_PATH"; then
            echo "Project solution correctly configured to run on UE5"
          else
            echo "Error: Project solution not configured to run on UE5"
            exit 1
          fi

      # Read the Target.cs file and make sure it has the correct unreal engine version
      - name: Check Unreal Engine target version in Target.cs file
        run: |
          FILE_PATH="TimeParadox.Target.cs"
          cd Source 

          
          if grep -q "IncludeOrderVersion = EngineIncludeOrderVersion.Unreal5_4;" "$FILE_PATH"; then
            echo "Project correctly configured to run on UE5"
          else
            echo "Error: Project not configured to run on UE5"
            exit 1
          fi

        # Read the TimeParadox.Build.cs file andCheck that the correct dependencies are included
      - name: Check that the correct dependencies are included
        run: |
          FILE_PATH="TimeParadox.Build.cs"
          cd Source 
          cd TimeParadox


          
          if grep -q '"Core", "CoreUObject", "Engine", "InputCore", "EnhancedInput"' "$FILE_PATH"; then
            echo "Project project dependencies properly included"
          else
            echo "Error: Project project dependencies not included"
            exit 1
          fi
      # New Test Case 1: Check if README file exists
      - name: Check for README file
        run: |
          cd ../../..
          ls -a
          if [ -f README.md ]; then
            echo "README file exists."
          else
            echo "Error: README file is missing."
            exit 1
          fi

    # New Test Case 2: Ensure at least one .cpp file exists in Source folder
      - name: Check for .cpp files in Source folder
        run: |
          cd Source
          if ls *.cpp 1> /dev/null 2>&1; then
            echo "At least one .cpp file exists in the Source folder."
          else
            echo "Error: No .cpp files found in the Source folder."
            exit 1
          fi
